/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vargas_tamayo_datastruc_proj1;

import java.util.ArrayList;
import javax.swing.JOptionPane;

/*
Class name: MainGUI

Class Author: Luis E. Vargas Tamayo

Purpose of the class:  Creates a GUI that allows the user to create unique LinkList in a Stack 

Date: 9/7/2017

List of changes with dates: none

Special Notes: none
*/ 
public class MainGUI extends javax.swing.JFrame 
{
    private Stack code = new Stack();

    public MainGUI() {initComponents();}
    
    /*
    Method Name: isNumeric()
    Purpose: Check if string is numeric, 
    Parameter: String
    Method Input:  none
    Return Value: boolean
    Date:  9/7/2017
    */   
    private boolean isNumeric(String term)
    {
        int intInteger=0; // default value of variable
        boolean blnKey = true; // boolean controller
        
        try // will try to parse the String to an Integer
        {
            intInteger = Integer.parseInt(term);
        } 
        catch(NumberFormatException ex) // if string is not an integer, the return will be false
        {
            blnKey = false;   
        }
       
        return blnKey;
    }
 
    /*
    Method Name: eliminate()
    Purpose: Delete a link created from Stack Class
    Parameter: IntLinkList
    Method Input: none
    Return Value: none
    Date: 9/7/2017
    */     
    private void eliminate(IntLinkList leader)
    {
        ArrayList<String> arr = new ArrayList();
        
        //stores the head of the stack and the following links until it reaches end of link list
        while(leader != null)
        {
            arr.add(String.valueOf(leader.getValue())); 
            leader= leader.getNextLink(); 
        }
        
        txtDisplay.setText(""); //Clears the text inside the textBox
        
        for(int i = arr.size()-1;i>=0;i--) // prints the stack on the Textbox
        {
            txtDisplay.setText(arr.get(i)+ "\n" + txtDisplay.getText() );
        }
    }
    
    
    /*
    Method Name: judge()
    Purpose: Check if user input is String, if not, a message will say Error
    Parameter: none
    Method Input: isNumeric()
    Return Value: integer
    Date: 9/7/2017
    */
    private int judge()
    {
        int carrier=0; // default value 
        String input = JOptionPane.showInputDialog("Enter Numeric Value"); // Ask user to enter a numeric input
                
        if(isNumeric(input)) // if the input is a number, the variable carrier will store the value, else a message will say error
        {
            carrier= Integer.parseInt(input);
        }
        else
        {
            JOptionPane.showMessageDialog(null,"ERROR: Please Enter Numeric Numbers Only!"); // message of error
        }
    
         return carrier;   //returns integer
    } 
    

    /*
    Method Name: composer()
    Purpose:  Directs the Program itself
    Parameter: Boolean 
    Method Input: judge(),Class Stack push(), Class Stack pop(),eliminate()
    Return Value: none
    Date: 9/7/2017
    */
    private void composer(boolean key)
    {
        
        if(key==true) //if true, the program will acquire a new number from the User
        {
            int carrier = judge(); // acquires numeric input from the User and stored here
            if(carrier!=0)
            {
                code.push(carrier); // A new link is created from the new input from the user
                txtDisplay.setText(carrier+ "\n" + txtDisplay.getText() ); //The stack is displayed on the Display Screen
            }
        }
        else // if false, the program the latest integer from the User
        {
            code.pop(); //deletes a link
            eliminate(code.getHead()); // deletes the lastest integer enterered from the user on the Display Screen
        }
    
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnPush = new javax.swing.JButton();
        btnPop = new javax.swing.JButton();
        txtTitle = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        txtStackTitle = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDisplay = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1450, 1400));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 51, 153));
        jPanel1.setMaximumSize(new java.awt.Dimension(1250, 1400));
        jPanel1.setMinimumSize(new java.awt.Dimension(1250, 1400));

        btnPush.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        btnPush.setText("Push");
        btnPush.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPushActionPerformed(evt);
            }
        });

        btnPop.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        btnPop.setText("Pop");
        btnPop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPopActionPerformed(evt);
            }
        });

        txtTitle.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        txtTitle.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTitle.setText("Push & Pop");

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));
        jPanel2.setMaximumSize(null);

        txtStackTitle.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        txtStackTitle.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtStackTitle.setText("Stack");

        txtDisplay.setEditable(false);
        txtDisplay.setColumns(20);
        txtDisplay.setFont(new java.awt.Font("Courier New", 0, 25)); // NOI18N
        txtDisplay.setRows(5);
        jScrollPane1.setViewportView(txtDisplay);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtStackTitle)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(txtStackTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnPush, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnPop, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 826, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 137, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(558, 558, 558)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPush, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPop, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /*
    Method Name: brnPushActionPerformed()
    Purpose: when user presses button, the program will complete a task
    Parameter: java.awt.event.ActionEvent evt
    Method Input: composer()
    Return Value: none
    Date: 9/7/2017
    */
    private void btnPushActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPushActionPerformed
    composer(true);   
    }//GEN-LAST:event_btnPushActionPerformed
    
    /*
    Method Name: btnPopActionPerformed()
    Purpose: when user presses button, the program will complete a task
    Parameter: java.awt.event.ActionEvent evt
    Method Input: composer()
    Return Value: none
    Date: 9/7/2017
    */
    private void btnPopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPopActionPerformed
    composer(false);
    }//GEN-LAST:event_btnPopActionPerformed

    
    public static void main(String args[]) 
    {
                   
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {public void run() {new MainGUI().setVisible(true);}});}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPop;
    private javax.swing.JButton btnPush;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtDisplay;
    private javax.swing.JTextField txtStackTitle;
    private javax.swing.JTextField txtTitle;
    // End of variables declaration//GEN-END:variables
}
